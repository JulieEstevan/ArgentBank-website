swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/{accountID}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch current month transactions
      description: Fetch transactions for the current month.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: integer
        - in: query
          name: currentMonth
          description: Month for filtering transactions
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account's transactions fetched successfully for the current month
          schema:
            $ref: '#/definitions/UserAccountList'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentification failed
        '404':
          description: No transaction found for the specified month and account
        '500':
          description: Interval Server Error - Something went wrong
  /transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch details of a specific transaction
      description: Fetch details from a specific transaction.
      parameters:
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details fetched successfully
          schema:
            $ref: '#/definitions/TransactionDetails'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentification failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update details of a specific transaction
      description: Update details of a specific transaction.
      parameters:
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
        - in: body
          name: transactionDetails
          description: New details for the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details updated successfully
          schema:
            $ref: '#/definitions/TransactionUpdate'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentification failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Post new details of a specific transaction
      description: Post new details of a specific transaction
      parameters:
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
        - in: body
          name: transactionDetails
          description: Post the new transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionPost'
      produces:
        - application/json
      responses:
        '200':
          description: New transaction details created successfully
          schema:
            $ref: '#/definitions/TransactionPost'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentification failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete details of a specific transaction
      description: Delete details of a specific transaction.
      parameters:
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type: string
        - in: body
          name: transactionDetails
          description: Delete the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionDelete'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details deleted successfully
          schema:
            $ref: '#/definitions/TransactionDelete'
        '400':
          description: Bad request - Invalid fields
        '401':
          description: Unauthorized - Authentification failed
        '404':
          description: Transaction or Account not found
        '500':
          description: Internal Server Error - Something went wrong
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserAccountList:
    type: object
    properties:
      accountID:
        type: string
        description: Account ID
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      transactionID:
        type: integer
        format: int64
        description: Transaction ID
        example: 1
      date:
        type: string
        description: Date du mois en cours
        example: "27/02/20"
      description:
        type: string
        description: Description de la transaction
        example: "Golden Sun Bakery"
      amount:
        type: number
        description: Montant de la transaction
        example: 8.00
      balance:
        type: number
        description: Solde après la transaction
        example: 298.00
  TransactionDetails:
    type: object
    properties:
      transactionType:
        type: string
        description: Type de transaction effectuer
        example: "Electronic"
      category:
        type: string
        description: Catégorie de la transaction (menu déroulant pour le choix de l'utilisateur)
        example: "Food"
      note:
        type: string
        description: Note de la transaction
        example: "Lorem ipsum"
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: Transcation category update
      note:
        type: string
        description: Transaction note update
  TransactionPost:
    type: object
    properties:
      category:
        type: string
        description: Transcation category post
      note:
        type: string
        description: Transaction note post
  TransactionDelete:
    type: object
    properties:
      category:
        type: string
        description: Transcation category delete
      note:
        type: string
        description: Transaction note delete